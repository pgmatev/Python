keys = ['A1', 'A2', 'A3', 'B1', 'B2', 'B3','C1', 'C2', 'C3']
class Error(Exception):
	pass

class InvalidValue(Error):
	def __init__(self, value):
		self.value = value

class InvalidMove(Error):
	def __init__(self, move):
		self.move = move

class InvalidKey(Error):
	def __init__(self, key):
		self.key = key

class TicTacToeBoard(dict):
	turn = True
	def __init__(self):
		self.__dict__ = dict.fromkeys(keys, " ") 

	def __setitem__(self, key, value):
		if(not key in keys):
			raise InvalidKey(key)
		if(value != "X" and value != "O"):
			raise InvalidValue(value)
		if(self.__dict__[key]!= " "):
			raise InvalidMove(key)
		self.__dict__[key] = value

	def __getitem__(self, key):
		print(self.__dict__[key])

	def __str__(self):
		a = []
		for i in self.__dict__.values():
			a.append(i)
		
		return (" -------------\n3| "+str(a[2])+" | "+str(a[5])+" | "+str(a[8])+\
				" | \n -------------\n2| "+str(a[1])+" | "+str(a[4])+" | "+str(a[7])+\
				" | \n -------------\n1| "+str(a[0])+" | "+str(a[3])+" | "+str(a[6])+\
				" | \n -------------\n"+\
				"   A   B   C")

	def game_status(self):
		if(self.__dict__["A1"] == 'X' and self.__dict__["A2"] == 'X' and self.__dict__["A3"] == 'X' or\
		   self.__dict__["B1"] == 'X' and self.__dict__["B2"] == 'X' and self.__dict__["B3"] == 'X' or\
		   self.__dict__["C1"] == 'X' and self.__dict__["C2"] == 'X' and self.__dict__["C3"] == 'X' or\
		   self.__dict__["A1"] == 'X' and self.__dict__["B1"] == 'X' and self.__dict__["C1"] == 'X' or\
		   self.__dict__["A2"] == 'X' and self.__dict__["B2"] == 'X' and self.__dict__["C2"] == 'X' or\
		   self.__dict__["A3"] == 'X' and self.__dict__["B3"] == 'X' and self.__dict__["C3"] == 'X' or\
		   self.__dict__["A1"] == 'X' and self.__dict__["B2"] == 'X' and self.__dict__["C3"] == 'X' or\
		   self.__dict__["A3"] == 'X' and self.__dict__["B2"] == 'X' and self.__dict__["C1"] == 'X'):
			print('X wins!')
			return
		if(self.__dict__["A1"] == 'O' and self.__dict__["A2"] == 'O' and self.__dict__["A3"] == 'O' or\
		   self.__dict__["B1"] == 'O' and self.__dict__["B2"] == 'O' and self.__dict__["B3"] == 'O' or\
		   self.__dict__["C1"] == 'O' and self.__dict__["C2"] == 'O' and self.__dict__["C3"] == 'O' or\
		   self.__dict__["A1"] == 'O' and self.__dict__["B1"] == 'O' and self.__dict__["C1"] == 'O' or\
		   self.__dict__["A2"] == 'O' and self.__dict__["B2"] == 'O' and self.__dict__["C2"] == 'O' or\
		   self.__dict__["A3"] == 'O' and self.__dict__["B3"] == 'O' and self.__dict__["C3"] == 'O' or\
		   self.__dict__["A1"] == 'O' and self.__dict__["B2"] == 'O' and self.__dict__["C3"] == 'O' or\
		   self.__dict__["A3"] == 'O' and self.__dict__["B2"] == 'O' and self.__dict__["C1"] == 'O'):
			print('O wins!')
			return
		elif(self.__dict__["A1"] != " " and self.__dict__["A2"] != " " and self.__dict__["A3"] != " " and\
		   self.__dict__["B1"] != " " and self.__dict__["B2"] != " " and self.__dict__["B3"] != " " and\
		   self.__dict__["C1"] != " " and self.__dict__["C2"] != " " and self.__dict__["C3"] != " "):
		   print("Draw!")
		else:
			print("Game in progress...")

	def clear_board(self):
		for i in self.__dict__.values():
			i = ' '
		print("Game reset!")

game = TicTacToeBoard()
try:
	game.clear_board
except InvalidValue as error:
	print("It's Tic-Tac-Toe not an Essay, You can't use '"+error.value+"'\n")
except InvalidMove as error:
	print("Make sure you don't intrude other's property!1! You trespassed "+error.move+"\n")
except InvalidKey as error:
	print("Oh, your calculations are wrong and you placed your symbol at '"+error.key+"' which is outside the board :( \n")

print(game)
game.game_status()
